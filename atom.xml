<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[confessions of a ruby addict]]></title>
  <link href="http://rra3.github.io/atom.xml" rel="self"/>
  <link href="http://rra3.github.io/"/>
  <updated>2014-01-25T18:24:18-05:00</updated>
  <id>http://rra3.github.io/</id>
  <author>
    <name><![CDATA[Robert Arnold]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Frozen Strings]]></title>
    <link href="http://rra3.github.io/blog/2014/01/25/frozen-strings/"/>
    <updated>2014-01-25T16:34:44-05:00</updated>
    <id>http://rra3.github.io/blog/2014/01/25/frozen-strings</id>
    <content type="html"><![CDATA[<h3>Frozen String spookiness</h3>

<p>Last week I was working on a rails project for work when I encountered something funky and slightly maddening. I was attempting to slice selected values from the HTTP request hash:</p>

<figure class='code'><figcaption><span>plucking values from the Rails Request object</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">allowed_keys</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>    <span class="s2">&quot;REMOTE_HOST&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;REMOTE_ADDR&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;HTTP_REFERER&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ORIGINAL_FULLPATH&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;REQUEST_METHOD&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;REQUEST_URI&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;HTTP_HOST&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;HTTP_ORIGIN&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;HTTP_USER_AGENT&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;REQUEST_PATH&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;QUERY_STRING&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;CONTENT_LENGTH&quot;</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'> <span class="nb">self</span><span class="o">.</span><span class="n">visitor_track</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="o">*</span><span class="n">allowed_keys</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>&hellip;when the controller evaluated this code, it would simply stop&hellip;&ldquo;freeze&rdquo; if you will, emitting no errors. After some searching I discovered that Rails freezes the hash keys of core extensions. At first blush, it seemed that there was no way around the issue &ndash; no matter how I sliced or diced it, if I attempted to use the same strings in another hash, the app would choke on them. Even if you attempt a &ldquo;.dup&rdquo; on the string, the object&rsquo;s frozen flag is copied to the new string object.</p>

<h3>What about symbols?</h3>

<p>A Ruby symbol is a distinctly different object type from String in Ruby, but in rails they are interchangable with them for hash lookups Since rails offers <a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/hash_with_indifferent_access.rb?source=cc">hash_with_indifferent_access</a> on hashes for core extensions, this works perfectly:</p>

<figure class='code'><figcaption><span>use symbols to access data on the request instead of strings. </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">allowed_keys</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>    <span class="ss">:REMOTE_HOST</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:REMOTE_ADDR</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:HTTP_REFERER</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:ORIGINAL_FULLPATH</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:REQUEST_METHOD</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:REQUEST_URI</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:HTTP_HOST</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:HTTP_ORIGIN</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:HTTP_USER_AGENT</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:REQUEST_PATH</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:QUERY_STRING</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:CONTENT_LENGTH</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'> <span class="nb">self</span><span class="o">.</span><span class="n">visitor_track</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="o">*</span><span class="n">allowed_keys</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
